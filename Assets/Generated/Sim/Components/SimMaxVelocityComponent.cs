//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class SimEntity {

    public MaxVelocityComponent maxVelocity { get { return (MaxVelocityComponent)GetComponent(SimComponentsLookup.MaxVelocity); } }
    public bool hasMaxVelocity { get { return HasComponent(SimComponentsLookup.MaxVelocity); } }

    public void AddMaxVelocity(float newValue) {
        var index = SimComponentsLookup.MaxVelocity;
        var component = (MaxVelocityComponent)CreateComponent(index, typeof(MaxVelocityComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxVelocity(float newValue) {
        var index = SimComponentsLookup.MaxVelocity;
        var component = (MaxVelocityComponent)CreateComponent(index, typeof(MaxVelocityComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxVelocity() {
        RemoveComponent(SimComponentsLookup.MaxVelocity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class SimMatcher {

    static Entitas.IMatcher<SimEntity> _matcherMaxVelocity;

    public static Entitas.IMatcher<SimEntity> MaxVelocity {
        get {
            if (_matcherMaxVelocity == null) {
                var matcher = (Entitas.Matcher<SimEntity>)Entitas.Matcher<SimEntity>.AllOf(SimComponentsLookup.MaxVelocity);
                matcher.componentNames = SimComponentsLookup.componentNames;
                _matcherMaxVelocity = matcher;
            }

            return _matcherMaxVelocity;
        }
    }
}
